var places = document.getElementById('google-places');
var autocomplete = new google.maps.places.Autocomplete(places);
// Listen for the event fired when the user selects a prediction and retrieve
// more details for that place.
autocomplete.addListener('place_changed', function() {
    var place = autocomplete.getPlace();
    $("#google-places").val('');
    $("#addPlace").click();
    listElement = $("#selectedPlaces li:last-child");
    listElement.find("input.place-name").val(place.name);
    listElement.find("input.place-latitude").val(place.geometry.location.lat());
    listElement.find("input.place-longitude").val(place.geometry.location.lng());
    listElement.find("input.place-order").val(listElement.index());
    listElement.find('span.place-name').text(place.name);
});

$(".select-box-multiple").select2({
    theme: "bootstrap",
    placeholder: "Select one or many countries"
});

$(".select-box-tags").select2({
    theme: "bootstrap",
    placeholder: "Choose from the list or create new",
    tags: true
});

$('.input-group-addon').click(function() {
    $(this).siblings().focus();
    $(this).siblings('select').select2('open');
});

$('#selectedPlaces').sortable({
    update: function(event, ui) {
        updateOrder($(this));
    }
});
$('#selectedPlaces').disableSelection();

$('#selectedPlaces').on('click', '.up', function(event){
    moveUp($(this).closest("li"), $('#selectedPlaces'));
});

$('#selectedPlaces').on('click', '.down', function(event){
    moveDown($(this).closest("li"), $('#selectedPlaces'));
});

$('#selectedPlaces').on('cocoon:after-insert', function(e, insertedItem) {
    updateOrder($(this));
});

$('#selectedPlaces').on('cocoon:after-remove', function() {
    updateOrder($(this));
});

$('#selectedPhotos > tbody').sortable({
    update: function(event, ui) {
        updateOrder($(this));
    }
});
$('#selectedPhotos > tbody').disableSelection();

$('#selectedPhotos > tbody').on('click', '.up', function(event){
    moveUp($(this).closest("tr"), $('#selectedPhotos > tbody'));
});

$('#selectedPhotos > tbody').on('click', '.down', function(event){
    moveDown($(this).closest("tr"), $('#selectedPhotos > tbody'));
});

$('#selectedPhotos > tbody').on('cocoon:after-insert', function(e, insertedItem) {
    updateOrder($(this));
});

$('#selectedPhotos > tbody').on('cocoon:after-remove', function() {
    updateOrder($(this));
});

$('#tripFormNext').click(function (e) {
  e.preventDefault()
  $("#tripFormTabs li.active").next().children('a').tab('show');
})

$('#tripFormTabs a[data-toggle="tab"]').on('show.bs.tab', function (event) {
    if ($(event.target).closest('li').index() == $("#tripFormTabs li").length - 1) {
        $('#tripFormNext').hide();
        $('#tripFormSave').show();
    } else {
        $('#tripFormSave').hide();
        $('#tripFormNext').show();
    }
})

$('#tripForm').on('ajax:success', function(event, data, status, xhr) {
    $('#tripFormModal').modal('hide');
    // TODO: don't reload page (use AJAX instead to update different elements)
    location.reload();
});

$('#tripForm').on('ajax:error', function(event, xhr, status, error) {
    $('#tripForm').render_form_errors("trip", $.parseJSON(xhr.responseText));
    $('#tripFormTabs a:first').tab('show');
});

/* --------------------------------------------------------------------
 * Photo selector
 * ----------------------------------------------------------------- */

var selector, callbackAlbumSelected, callbackPhotoUnselected, callbackSubmit;
var buttonOK = $('#CSPhotoSelector_buttonOK');
var o = this;


//$.ajaxSetup({ cache: true });
$.getScript('//connect.facebook.net/en_US/sdk.js', function(){
    FB.init({
        appId: ($("body").data("rails-env") === "production" ? 1696173967323541 : 1745663609041243),
        version: 'v2.7'
    });     
});

fbphotoSelect = function(id) {
    // if no user/friend id is sent, default to current user
    if (!id) id = 'me';

    callbackAlbumSelected = function(albumId) {
        var album, name;
        album = CSPhotoSelector.getAlbumById(albumId);
        // Show album photos
        selector.showPhotoSelector(null, album.id, album.count);
    };

    callbackSubmit = function(photos) {
        var photo, i, len, caption, tablerow, thumb;
        for (i = 0, len = photos.length; i < len; i += 1) {
            photo = photos[i];
            if (typeof photo.name === "undefined") {
                caption = "";
            } else {
                caption = photo.name;
            }
            if (typeof photo.place != "undefined") {
                if (!caption) {
                    caption = photo.place.name;
                } else {
                    caption = caption + ', ' + photo.place.name;
                }
            }
            $("#addPhoto").click();
            tablerow = $("#selectedPhotos tr:last");
            thumb = tablerow.find('td.thumb-field')
            thumb.find("input.thumb-url").val(photo.picture);
            thumb.find("input.image-url").val(photo.source);
            thumb.find(".thumbnail").append('<img src="' + photo.picture + '">');
            tablerow.find('td.caption-field').find("input").val(caption);
        }
    };

    // Initialise the Photo Selector with options that will apply to all instances
    CSPhotoSelector.init();

    // Create Photo Selector instances
    selector = CSPhotoSelector.newInstance({
        callbackAlbumSelected   : callbackAlbumSelected,
        callbackSubmit          : callbackSubmit,
        albumsPerPage           : 6,
        photosPerPage           : 12,
    });

    // reset and show album selector
    selector.reset();
    selector.showAlbumSelector(id);
}

$("#fbPhotoSelect").click(function (e) {
    e.preventDefault();
    fbphotoSelect();
});

// Cloudinary jQuery integration library uses jQuery File Upload widget
// (see http://blueimp.github.io/jQuery-File-Upload/).
// Any file input field with cloudinary-fileupload class is automatically
// wrapped using the File Upload widget and configured for Cloudinary uploads.
// You can further customize the configuration using .fileupload method
// as we do below.
$(".cloudinary-fileupload")
    .cloudinary_fileupload({
        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        dropZone: "#dropzone",
    })
    .on("fileuploadprogressall", function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        $('#progress .progress-bar').css(
            'width',
            progress + '%'
        );
    })
    .on("fileuploaddone", function (e, data) {
        // TODO: handle errors
        $('#photoUploaderModal').modal('hide');
    })
    .on("cloudinarydone", function (e, data) {
        $("#addPhoto").click();
        var tablerow = $("#selectedPhotos tr:last");
        var thumb = tablerow.find('td.thumb-field')
        thumb.find("input.thumb-url").val($.cloudinary.url(data.result.public_id, {
            format: data.result.format, width: 130, height: 130, crop: "fit", secure: true
        }));
        thumb.find("input.image-url").val($.cloudinary.url(data.result.public_id, {
            format: data.result.format, secure: true
        }));
        $.cloudinary.image(data.result.public_id, {
          width: 130, height: 130, crop: "fit", secure: true
        }).appendTo(thumb.find(".thumbnail"));
    });
var counter = 0;
$('#dropzone')
    .on("dragenter", function (e) {
        counter++;
        $(this).addClass('hover');
    })
    .on("dragleave", function (e) {
        counter--;
        if (counter === 0) { 
            $(this).removeClass('hover');
        }
    })
    .on("drop", function (e) {
        counter = 0;
        $(this).removeClass('hover');
    });